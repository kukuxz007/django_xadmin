"""
Django settings for liuyanben project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
import sys
from dotenv import load_dotenv
load_dotenv()

# 基础目录
# BASE_DIR = Path(__file__).resolve().parent.parent
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))
sys.path.insert(0, os.path.join(BASE_DIR, 'extra_apps'))
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'your-default-secret-key')
# 从环境变量中获取 DEBUG 模式，默认为 True
DEBUG = os.environ.get('DJANGO_DEBUG', 'True') == 'True'
# 从环境变量中获取允许的主机列表
ALLOWED_HOSTS = os.environ.get('DJANGO_ALLOWED_HOSTS','').split(',')


# 应用程序定义
INSTALLED_APPS = [
    'django.contrib.admin',  # 管理后台
    'django.contrib.auth',  # 认证系统
    'django.contrib.contenttypes',  # 内容类型
    'django.contrib.sessions',  # 会话框架
    'django.contrib.messages',  # 消息框架
    'django.contrib.staticfiles',  # 静态文件管理
    'xadmin',  # 第三方管理后台
    'crispy_forms',  # 表单美化
    'reversion',  # 版本控制
    'DjangoUeditor',  # 富文本编辑器
    'imagekit',  # 图像处理
    'img_admin.apps.ImgAdminConfig',  # 自定义应用
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',  # 安全中间件
    'django.contrib.sessions.middleware.SessionMiddleware',  # 会话中间件
    'django.middleware.common.CommonMiddleware',  # 通用中间件
    'django.middleware.csrf.CsrfViewMiddleware',  # CSRF 保护
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # 认证中间件
    'django.contrib.messages.middleware.MessageMiddleware',  # 消息中间件
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  # Clickjacking 保护
]

ROOT_URLCONF = 'liuyanben.urls'  # URL 配置

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',  # 模板引擎
        'DIRS': [],  # 模板目录
        'APP_DIRS': True,  # 启用应用目录中的模板
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',  # 调试上下文处理器
                'django.template.context_processors.request',  # 请求上下文处理器
                'django.contrib.auth.context_processors.auth',  # 认证上下文处理器
                'django.contrib.messages.context_processors.messages',  # 消息上下文处理器
            ],
        },
    },
]

WSGI_APPLICATION = 'liuyanben.wsgi.application'  # WSGI 应用

# 数据库配置
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',  # 数据库引擎
        'NAME': os.environ.get('DB_NAME'),  # 数据库名称
        'HOST': os.environ.get('DB_HOST'),  # 数据库主机
        'USER': os.environ.get('DB_USER'),  # 数据库用户
        'PASSWORD': os.environ.get('DB_PASSWORD'),  # 数据库密码
        'PORT': os.environ.get('DB_PORT'),  # 数据库端口
        'OPTIONS': {
            'charset': 'utf8mb4',  # 字符集
            'init_command': 'SET sql_mode=traditional',  # 初始化命令
        },
    }
}
# print(DATABASES)
# 密码验证
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},  # 用户属性相似性验证
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},  # 最小长度验证
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},  # 常用密码验证
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},  # 数字密码验证
]

# 国际化
LANGUAGE_CODE = 'zh-hans'  # 语言代码
TIME_ZONE = 'UTC'  # 时区
USE_I18N = True  # 启用国际化
USE_TZ = True  # 启用时区支持

STATIC_ROOT = os.path.join(BASE_DIR, 'k_collect_static')
STATIC_URL = '/k_static/'  # 静态文件 URL
MEDIA_ROOT = os.path.join(BASE_DIR, 'k_media')
MEDIA_URL = '/k_media/'
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
DATA_UPLOAD_MAX_NUMBER_FIELDS = 100 * 100 * 100  # 数据上传最大字段数
